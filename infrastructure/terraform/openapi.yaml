openapi: 3.0.3
info:
  title: Donation Platform API
  description: |
    Comprehensive API for the gamified donation platform with A2A agent integration.
    
    Features:
    - Donation processing with real-time gamification
    - Points and achievements system
    - A2A agent coordination for optimization
    - Location-based rewards and hotspots
    - Real-time analytics and leaderboards
    
  version: 1.0.0
  contact:
    name: Donation Platform Team
    email: support@donationplatform.com
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT

servers:
  - url: ${donation_service_url}
    description: Donation Service
  - url: ${points_service_url}
    description: Points & Achievements Service
  - url: ${donor_agent_url}
    description: Donor Engagement Agent (A2A)
  - url: ${charity_agent_url}
    description: Charity Optimization Agent (A2A)

components:
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
      description: JWT token for user authentication
    
    ApiKeyAuth:
      type: apiKey
      in: header
      name: X-API-Key
      description: API key for service-to-service authentication

  schemas:
    Location:
      type: object
      required:
        - lat
        - lng
      properties:
        lat:
          type: number
          format: double
          minimum: -90
          maximum: 90
          description: Latitude coordinate
          example: 37.7749
        lng:
          type: number
          format: double
          minimum: -180
          maximum: 180
          description: Longitude coordinate
          example: -122.4194
        address:
          type: string
          maxLength: 255
          description: Human-readable address
          example: "123 Main St, San Francisco, CA 94102"
        city:
          type: string
          maxLength: 100
          example: "San Francisco"
        state:
          type: string
          maxLength: 50
          example: "CA"
        zip_code:
          type: string
          maxLength: 20
          example: "94102"

    DonationItem:
      type: object
      required:
        - type
        - quantity
      properties:
        type:
          type: string
          enum: [clothing, food, books, electronics, furniture, toys, household, medical]
          description: Type of donated item
        quantity:
          type: integer
          minimum: 1
          description: Number of items
        condition:
          type: string
          enum: [excellent, good, fair, poor]
          default: good
          description: Condition of the items
        estimated_value:
          type: number
          format: double
          minimum: 0
          description: Estimated monetary value in USD
        description:
          type: string
          maxLength: 500
          description: Additional details about the items

    DonationRequest:
      type: object
      required:
        - donation_type
        - charity_id
      properties:
        amount:
          type: number
          format: double
          minimum: 0.01
          description: Monetary donation amount (required for monetary donations)
          example: 75.50
        donation_type:
          type: string
          enum: [monetary, items, volunteer_time]
          description: Type of donation
        items:
          type: array
          items:
            $ref: '#/components/schemas/DonationItem'
          description: List of donated items (required for item donations)
        location:
          $ref: '#/components/schemas/Location'
        charity_id:
          type: string
          format: uuid
          description: Target charity organization ID
        message:
          type: string
          maxLength: 500
          description: Optional message to the charity
        recurring:
          type: boolean
          default: false
          description: Whether this is a recurring donation
        recurring_frequency:
          type: string
          enum: [weekly, monthly, quarterly, yearly]
          description: Frequency for recurring donations

    PointsBreakdown:
      type: object
      properties:
        base:
          type: integer
          description: Base points for the action
        tier_multiplier:
          type: number
          format: double
          description: Multiplier based on user tier
        type_multiplier:
          type: number
          format: double
          description: Multiplier based on donation type
        first_time_bonus:
          type: boolean
          description: Whether first-time bonus was applied
        recurring_bonus:
          type: boolean
          description: Whether recurring donor bonus was applied
        location_bonus:
          type: boolean
          description: Whether location-based bonus was applied
        seasonal_bonus:
          type: number
          format: double
          description: Seasonal event multiplier

    Achievement:
      type: object
      properties:
        id:
          type: string
          description: Unique achievement identifier
        name:
          type: string
          description: Achievement name
        description:
          type: string
          description: Achievement description
        type:
          type: string
          enum: [donation_milestone, location_discovery, streak_achievement, tier_progression, social_engagement]
        points:
          type: integer
          minimum: 0
          description: Points awarded for this achievement
        emoji:
          type: string
          description: Emoji representation
        unlocked_at:
          type: string
          format: date-time
          description: When the achievement was unlocked
        requirements:
          type: object
          description: Requirements to unlock this achievement

    LeaderboardEntry:
      type: object
      properties:
        user_id:
          type: string
          format: uuid
        name:
          type: string
          description: User display name
        points:
          type: integer
          description: Total points earned
        tier:
          type: string
          enum: [Bronze, Silver, Gold, Platinum, Diamond]
        rank:
          type: integer
          minimum: 1
          description: Current leaderboard position
        donations_count:
          type: integer
          description: Total number of donations made
        total_donated:
          type: number
          format: double
          description: Total amount donated in USD

    ErrorResponse:
      type: object
      required:
        - error
        - message
        - timestamp
      properties:
        error:
          type: string
          description: Error type or code
        message:
          type: string
          description: Human-readable error message
        details:
          type: object
          description: Additional error details
        timestamp:
          type: string
          format: date-time
        request_id:
          type: string
          description: Unique request identifier for debugging

security:
  - BearerAuth: []

paths:
  # Health Check
  /health:
    get:
      summary: Health check endpoint
      description: Check the health status of the service
      tags:
        - Health
      security: []
      responses:
        '200':
          description: Service is healthy
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: healthy
                  timestamp:
                    type: string
                    format: date-time
                  service:
                    type: string
                    example: donation-service

  # Donations API
  /api/v1/donations:
    post:
      summary: Create a new donation
      description: |
        Create a new donation with automatic gamification processing.
        The system will:
        - Process the donation through A2A agents
        - Calculate and award points based on multiple factors
        - Check for newly unlocked achievements
        - Update user tier progression
        - Send real-time notifications
      tags:
        - Donations
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DonationRequest'
            examples:
              monetary_donation:
                summary: Monetary donation example
                value:
                  amount: 75.50
                  donation_type: monetary
                  charity_id: "550e8400-e29b-41d4-a716-446655440001"
                  location:
                    lat: 37.7749
                    lng: -122.4194
                    address: "Downtown Community Center"
                  message: "Keep up the great work!"
              item_donation:
                summary: Item donation example
                value:
                  donation_type: items
                  items:
                    - type: clothing
                      quantity: 10
                      condition: good
                      estimated_value: 50.00
                      description: "Winter coats and jackets"
                  charity_id: "550e8400-e29b-41d4-a716-446655440002"
                  location:
                    lat: 37.7649
                    lng: -122.4294
      responses:
        '200':
          description: Donation created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  donation_id:
                    type: string
                    format: uuid
                  status:
                    type: string
                    enum: [pending, processing, completed, failed]
                  points:
                    type: object
                    properties:
                      points_awarded:
                        type: integer
                        example: 150
                      breakdown:
                        $ref: '#/components/schemas/PointsBreakdown'
                      new_tier:
                        type: string
                        enum: [Bronze, Silver, Gold, Platinum, Diamond]
                        description: New tier if progression occurred
                      total_points:
                        type: integer
                        example: 2450
                      tier_progression:
                        type: boolean
                        example: false
                  created_at:
                    type: string
                    format: date-time
        '400':
          description: Invalid request data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Authentication required
        '429':
          description: Rate limit exceeded
        '500':
          description: Internal server error

  /api/v1/donations/{donation_id}:
    get:
      summary: Get donation details
      description: Retrieve detailed information about a specific donation
      tags:
        - Donations
      parameters:
        - name: donation_id
          in: path
          required: true
          schema:
            type: string
            format: uuid
          description: Unique donation identifier
      responses:
        '200':
          description: Donation details retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  donation:
                    type: object
                    properties:
                      id:
                        type: string
                        format: uuid
                      user_id:
                        type: string
                        format: uuid
                      amount:
                        type: number
                        format: double
                      donation_type:
                        type: string
                      items:
                        type: array
                        items:
                          $ref: '#/components/schemas/DonationItem'
                      charity_id:
                        type: string
                      status:
                        type: string
                      points_awarded:
                        type: integer
                      created_at:
                        type: string
                        format: date-time
        '404':
          description: Donation not found
        '403':
          description: Access denied

  /api/v1/users/{user_id}/donations:
    get:
      summary: Get user's donation history
      description: Retrieve paginated list of user's donations
      tags:
        - Donations
      parameters:
        - name: user_id
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: limit
          in: query
          schema:
            type: integer
            minimum: 1
            maximum: 100
            default: 10
        - name: offset
          in: query
          schema:
            type: integer
            minimum: 0
            default: 0
      responses:
        '200':
          description: Donation history retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  donations:
                    type: array
                    items:
                      type: object
                  pagination:
                    type: object
                    properties:
                      limit:
                        type: integer
                      offset:
                        type: integer
                      count:
                        type: integer

  # Points & Achievements API
  /api/v1/points/award:
    post:
      summary: Award points to user
      description: Award points for various activities and check for new achievements
      tags:
        - Points & Achievements
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - user_id
                - points
                - source
                - description
              properties:
                user_id:
                  type: string
                  format: uuid
                points:
                  type: integer
                  minimum: 1
                source:
                  type: string
                  enum: [donation, achievement, bonus, referral, social_share]
                description:
                  type: string
                  maxLength: 255
                metadata:
                  type: object
      responses:
        '200':
          description: Points awarded successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  points_awarded:
                    type: integer
                  total_points:
                    type: integer
                  achievements_unlocked:
                    type: array
                    items:
                      $ref: '#/components/schemas/Achievement'
                  transaction_id:
                    type: string

  /api/v1/leaderboard/global:
    get:
      summary: Get global leaderboard
      description: Retrieve the global points leaderboard
      tags:
        - Leaderboard
      parameters:
        - name: limit
          in: query
          schema:
            type: integer
            minimum: 1
            maximum: 100
            default: 100
        - name: offset
          in: query
          schema:
            type: integer
            minimum: 0
            default: 0
      responses:
        '200':
          description: Leaderboard retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  leaderboard:
                    type: array
                    items:
                      $ref: '#/components/schemas/LeaderboardEntry'
                  pagination:
                    type: object

  /api/v1/leaderboard/tier/{tier}:
    get:
      summary: Get tier-specific leaderboard
      description: Retrieve leaderboard for a specific user tier
      tags:
        - Leaderboard
      parameters:
        - name: tier
          in: path
          required: true
          schema:
            type: string
            enum: [Bronze, Silver, Gold, Platinum, Diamond]
        - name: limit
          in: query
          schema:
            type: integer
            minimum: 1
            maximum: 50
            default: 50
      responses:
        '200':
          description: Tier leaderboard retrieved successfully
        '400':
          description: Invalid tier specified

  /api/v1/users/{user_id}/achievements:
    get:
      summary: Get user achievements
      description: Retrieve all achievements unlocked by the user
      tags:
        - Points & Achievements
      parameters:
        - name: user_id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: User achievements retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  user_id:
                    type: string
                    format: uuid
                  achievements:
                    type: array
                    items:
                      $ref: '#/components/schemas/Achievement'
                  total_count:
                    type: integer

  # Analytics API
  /api/v1/analytics/donations/today:
    get:
      summary: Get today's donation metrics
      description: Retrieve donation analytics for the current day
      tags:
        - Analytics
      security: []  # Public endpoint for dashboard
      responses:
        '200':
          description: Today's metrics retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  amount:
                    type: number
                    format: double
                    description: Total amount donated today
                  count:
                    type: integer
                    description: Number of donations today
                  change:
                    type: number
                    format: double
                    description: Percentage change from yesterday
                  date:
                    type: string
                    format: date

  /api/v1/analytics/donors/active:
    get:
      summary: Get active donor metrics
      description: Retrieve metrics about currently active donors
      tags:
        - Analytics
      security: []
      responses:
        '200':
          description: Active donor metrics retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    type: integer
                    description: Number of active donors in last 30 days
                  new_today:
                    type: integer
                    description: New donors registered today
                  period:
                    type: string
                    example: "30_days"

  # A2A Agent Endpoints
  /.well-known/agent.json:
    get:
      summary: Agent discovery endpoint
      description: A2A protocol endpoint for agent discovery and capability advertisement
      tags:
        - A2A Protocol
      security: []
      responses:
        '200':
          description: Agent information retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  name:
                    type: string
                    example: "Donor Engagement Agent"
                  description:
                    type: string
                  version:
                    type: string
                    example: "1.0.0"
                  url:
                    type: string
                    format: uri
                  skills:
                    type: array
                    items:
                      type: string
                    example: ["process_donation", "analyze_donor_base"]
                  protocol_version:
                    type: string
                    example: "0.3.0"
                  security_mode:
                    type: string
                    example: "jwt_authenticated"

  /a2a/invoke:
    post:
      summary: Invoke agent skill
      description: A2A protocol endpoint for invoking agent skills
      tags:
        - A2A Protocol
      security:
        - BearerAuth: []
      parameters:
        - name: A2A-Protocol-Version
          in: header
          required: true
          schema:
            type: string
            example: "0.3.0"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - skill
                - params
              properties:
                id:
                  type: string
                  description: Unique message ID
                skill:
                  type: string
                  description: Name of skill to invoke
                params:
                  type: object
                  description: Parameters for the skill
                timestamp:
                  type: string
                  format: date-time
      responses:
        '200':
          description: Skill executed successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  result:
                    type: object
                    description: Skill execution result
                  timestamp:
                    type: string
                    format: date-time
                  agent:
                    type: string
                    description: Name of the agent that processed the request
        '404':
          description: Skill not found
        '500':
          description: Skill execution failed

  # WebSocket Endpoints (documented for reference)
  /ws/{user_id}:
    get:
      summary: WebSocket connection for real-time updates
      description: |
        Establish WebSocket connection for real-time notifications.
        
        Supported message types:
        - `ping` -> `pong` (keep-alive)
        - `subscribe:{event_type}` (subscribe to specific events)
        
        Incoming message types:
        - `donation_created` - New donation notification
        - `achievement_unlocked` - Achievement notification  
        - `tier_progression` - Tier upgrade notification
        - `points_update` - Points balance update
      tags:
        - Real-time
      parameters:
        - name: user_id
          in: path
          required: true
          schema:
            type: string
            format: uuid
          description: User identifier for targeted notifications

tags:
  - name: Health
    description: Service health monitoring
  - name: Donations
    description: Core donation processing and management
  - name: Points & Achievements
    description: Gamification system with points and achievements
  - name: Leaderboard
    description: User rankings and competition features
  - name: Analytics
    description: Platform metrics and insights
  - name: A2A Protocol
    description: Agent-to-Agent communication endpoints
  - name: Real-time
    description: WebSocket and live features

externalDocs:
  description: Platform Documentation
  url: https://docs.donationplatform.com